package com.demo.inter.queuepractice;

import java.util.Arrays;
import java.util.HashSet;
import java.util.function.Function;
import java.util.function.Predicate;

public class CircularQueuUsingLinkedList {

	int charCount;
	static class Node{
		int data;
		Node next;
		
		Node(int data){
			this.data = data;
		}
	}
	Node front;
	Node rear;
	
	void enqueu(int data) {
		Node newNode = new Node(data);
		if(rear == null) {
			rear = front = newNode;
		}else {
			rear.next = newNode;
			rear = newNode;
			rear.next = front;
		}
	}
	
	int deQuque() {
		int data = front.data;
		front = front.next;
		rear.next = front;
		return data;
	}
	
	public static  Predicate<String> m1(String args) {
		
		Function<String,CircularQueuUsingLinkedList> fun = s -> m2(s);
	        
				
				
				Predicate<String> prd =   (str) -> str.startsWith(args);
	        return prd;
	}
	
	static CircularQueuUsingLinkedList m2(String s) {
		return null;
	}
	
	public static void main(String[] args) {
		String s = "aabbc";
		System.out.println(new HashSet<String>(Arrays.asList(s.split(""))));
	}
}
